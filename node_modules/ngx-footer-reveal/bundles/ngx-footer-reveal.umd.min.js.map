{"version":3,"file":"ngx-footer-reveal.umd.min.js","sources":["../../out-tsc/lib/src/directive/lib.directive.ts","../../out-tsc/lib/src/module.ts"],"sourcesContent":["import { AfterViewInit, DoCheck, Directive, ElementRef, HostListener, Input, Renderer } from '@angular/core';\r\n\r\n@Directive({\r\n  selector:\"[ngxFooterReveal]\"\r\n})\r\nexport class NgxFooterRevealDirective implements AfterViewInit, DoCheck { \r\n    @Input('options') public options?: any;\r\n    @Input('shadow') public shadow?: boolean;\r\n    @Input('shadowOpacity') public shadowOpacity?: number;\r\n    @Input('zIndex') public zIndex?: number;\r\n    @Input('height') public height?: number;\r\n    @Input('width') public width?: number;\r\n\r\n    private prev: any;\r\n    private defaults: any;\r\n    private settings: any;\r\n\r\n    constructor(\r\n        private el: ElementRef,\r\n        private renderer: Renderer,\r\n    ) {\r\n        this.prev = this.el.nativeElement.previousElementSibling;\r\n        this.defaults = new Object();\r\n        this.settings = new Object();\r\n    }\r\n    \r\n    private initialize() {\r\n        let presets = {\r\n            shadow: this.shadow == null ? true : this.shadow,\r\n            shadowOpacity: this.shadowOpacity == null ? 0.8 : this.shadowOpacity,\r\n            zIndex: this.zIndex == null ? -100 : this.zIndex\r\n        };\r\n\r\n        if (this.options == null) {\r\n            this.options = new Object();\r\n        }\r\n\r\n        this.defaults = { ...presets, ...this.options };\r\n        this.settings = { \r\n            height: this.height == null ? 0 : this.height,\r\n            width: this.width == null ? 0 : this.width,\r\n            ...this.defaults, ...this.options \r\n        };\r\n    }\r\n\r\n    public ngAfterViewInit() {\r\n        this.initialize();\r\n        this.setMarginAndWidth();\r\n        \r\n        if (this.el.nativeElement.offsetHeight <= window.outerHeight && \r\n            this.el.nativeElement.offsetTop >= window.outerHeight) {\r\n            this.renderer.setElementStyle(this.el.nativeElement, 'z-index', this.defaults.zIndex.toString());\r\n            this.renderer.setElementStyle(this.el.nativeElement, 'position', 'fixed');\r\n            this.renderer.setElementStyle(this.el.nativeElement, 'bottom', '0');\r\n            \r\n            if (this.defaults.shadow) {\r\n                this.renderer.setElementStyle(this.prev, 'moz-box-shadow', '0 20px 30px -20px rgba(0,0,0,' + this.defaults.shadowOpacity + ')');\r\n                this.renderer.setElementStyle(this.prev, '-webkit-box-shadow', '0 20px 30px -20px rgba(0,0,0,' + this.defaults.shadowOpacity +')');\r\n                this.renderer.setElementStyle(this.prev, 'box-shadow', '0 20px 30px -20px rgba(0,0,0,' + this.defaults.shadowOpacity + ')');\r\n            }\r\n        }\r\n    }\r\n\r\n    public ngDoCheck() {\r\n        if (this.width === 0 || this.height === 0) {\r\n            this.setMarginAndWidth();\r\n        }\r\n    }\r\n    \r\n    @HostListener('window:resize')\r\n    @HostListener('footerRevealResize')\r\n    onWindowLoad() {\r\n        this.setMarginAndWidth();\r\n    }\r\n\r\n    private setMarginAndWidth() {\r\n        let height = this.el.nativeElement.offsetHeight;\r\n        let width = this.prev.offsetWidth;\r\n        this.settings.height = height && height > 0 ? height : this.settings.height;\r\n        this.settings.width = width && width > 0 ? width : this.settings.width;\r\n        this.renderer.setElementStyle(this.el.nativeElement, 'width', this.settings.width.toString() + 'px');\r\n        this.renderer.setElementStyle(this.prev, 'margin-bottom', this.settings.height.toString() + 'px');\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { NgxFooterRevealDirective } from './directive/lib.directive';\r\n\r\n@NgModule({\r\n  declarations: [NgxFooterRevealDirective],\r\n  exports: [NgxFooterRevealDirective]\r\n})\r\nexport class NgxFooterRevealModule { }\r\n"],"names":["el","renderer","this","prev","nativeElement","previousElementSibling","defaults","Object","settings","NgxFooterRevealDirective","presets","shadow","shadowOpacity","zIndex","options","height","width","initialize","setMarginAndWidth","offsetHeight","window","outerHeight","offsetTop","setElementStyle","toString","offsetWidth","Directive","selector","ElementRef","Renderer","Input","HostListener","NgModule","declarations","exports"],"mappings":"8bAiBI,WACYA,EACAC,GADAC,QAAAF,EACAE,cAAAD,EAERC,KAAKC,KAAOD,KAAKF,GAAGI,cAAcC,uBAClCH,KAAKI,SAAW,IAAIC,OACpBL,KAAKM,SAAW,IAAID,cAGhBE,kCACJ,IAAIC,EAAU,CACVC,OAAuB,MAAfT,KAAKS,QAAwBT,KAAKS,OAC1CC,cAAqC,MAAtBV,KAAKU,cAAwB,GAAMV,KAAKU,cACvDC,OAAuB,MAAfX,KAAKW,QAAkB,IAAMX,KAAKW,QAG1B,MAAhBX,KAAKY,UACLZ,KAAKY,QAAU,IAAIP,QAGvBL,KAAKI,cAAgBI,EAAYR,KAAKY,SACtCZ,KAAKM,YACDO,OAAuB,MAAfb,KAAKa,OAAiB,EAAIb,KAAKa,OACvCC,MAAqB,MAAdd,KAAKc,MAAgB,EAAId,KAAKc,OAClCd,KAAKI,SAAaJ,KAAKY,UAI3BL,uCACHP,KAAKe,aACLf,KAAKgB,oBAEDhB,KAAKF,GAAGI,cAAce,cAAgBC,OAAOC,aAC7CnB,KAAKF,GAAGI,cAAckB,WAAaF,OAAOC,cAC1CnB,KAAKD,SAASsB,gBAAgBrB,KAAKF,GAAGI,cAAe,UAAWF,KAAKI,SAASO,OAAOW,YACrFtB,KAAKD,SAASsB,gBAAgBrB,KAAKF,GAAGI,cAAe,WAAY,SACjEF,KAAKD,SAASsB,gBAAgBrB,KAAKF,GAAGI,cAAe,SAAU,KAE3DF,KAAKI,SAASK,SACdT,KAAKD,SAASsB,gBAAgBrB,KAAKC,KAAM,iBAAkB,gCAAkCD,KAAKI,SAASM,cAAgB,KAC3HV,KAAKD,SAASsB,gBAAgBrB,KAAKC,KAAM,qBAAsB,gCAAkCD,KAAKI,SAASM,cAAe,KAC9HV,KAAKD,SAASsB,gBAAgBrB,KAAKC,KAAM,aAAc,gCAAkCD,KAAKI,SAASM,cAAgB,QAK5HH,iCACgB,IAAfP,KAAKc,OAA+B,IAAhBd,KAAKa,QACzBb,KAAKgB,qBAMbT,oCACIP,KAAKgB,qBAGDT,yCACJ,IAAIM,EAASb,KAAKF,GAAGI,cAAce,aAC/BH,EAAQd,KAAKC,KAAKsB,YACtBvB,KAAKM,SAASO,OAASA,GAAmB,EAATA,EAAaA,EAASb,KAAKM,SAASO,OACrEb,KAAKM,SAASQ,MAAQA,GAAiB,EAARA,EAAYA,EAAQd,KAAKM,SAASQ,MACjEd,KAAKD,SAASsB,gBAAgBrB,KAAKF,GAAGI,cAAe,QAASF,KAAKM,SAASQ,MAAMQ,WAAa,MAC/FtB,KAAKD,SAASsB,gBAAgBrB,KAAKC,KAAM,gBAAiBD,KAAKM,SAASO,OAAOS,WAAa,2BA/EnGE,kBAAU,CACTC,SAAS,iEAHiCC,oBAAiCC,+CAMxEC,cAAM,2BACNA,cAAM,iCACNA,cAAM,iCACNA,cAAM,0BACNA,cAAM,yBACNA,cAAM,+BA0DNC,qBAAa,wBACbA,qBAAa,oFCnEjBC,iBAAS,CACRC,aAAc,CAACxB,GACfyB,QAAS,CAACzB"}