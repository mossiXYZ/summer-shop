{"version":3,"sources":["ng://ngx-img-zoom/lib/ngx-img-zoom.service.ts","ng://ngx-img-zoom/lib/ngx-img-zoom.component.ts","ng://ngx-img-zoom/lib/ngx-img-zoom.module.ts"],"names":["NgxImgZoomService","this","zoomMode","prototype","setZoomMode","Injectable","NgxImgZoomComponent","renderer","ngxZoomService","hide","_triggerAnimationIn","notFirstTime","Object","defineProperty","val","zoomImage","setStyle","result","previewImage","ngOnInit","ngAfterViewInit","img","imgElmRef","nativeElement","resultElmRef","container","containerElmRef","setAttribute","imageZoom","lens","createElement","addClass","insertBefore","parentElement","cx","offsetWidth","cy","offsetHeight","width","height","listen","moveLens","bind","e","pos","x","y","preventDefault","getCursorPos","a","window","event","getBoundingClientRect","pageX","left","pageY","top","pageXOffset","pageYOffset","handleMouseLeave","Component","args","selector","template","Renderer2","ViewChild","Input","NgxImgZoomModule","NgModule","imports","CommonModule","providers","declarations","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { NgxImgZoomMode } from './mode.enum';\n\n@Injectable()\nexport class NgxImgZoomService {\n  zoomMode = NgxImgZoomMode.HoverZoom;\n\n  constructor() { }\n\n  setZoomMode(zoomMode) {\n    this.zoomMode = zoomMode;\n  }\n}\n","import { Component, OnInit, Renderer2, ElementRef, ViewChild, AfterViewInit, Input } from '@angular/core';\nimport { NgxImgZoomService } from './ngx-img-zoom.service';\nimport { NgxImgZoomMode } from './mode.enum';\n@Component({\n  selector: 'ngx-img-zoom',\n  templateUrl: './ngx-img-zoom.component.html',\n  styleUrls: ['./ngx-img-zoom.component.css'],\n})\nexport class NgxImgZoomComponent implements OnInit, AfterViewInit {\n\n  img; lens; result; cx; cy; container;\n  hide = true;\n  _triggerAnimationIn = false;\n  notFirstTime = false;\n\n  constructor(\n    private renderer: Renderer2,\n    private ngxZoomService: NgxImgZoomService\n  ) { }\n\n  zoomMode: NgxImgZoomMode = this.ngxZoomService.zoomMode;\n  @ViewChild('img') imgElmRef: ElementRef;\n  @ViewChild('result') resultElmRef: ElementRef;\n  @ViewChild('container') containerElmRef: ElementRef;\n\n  @Input() imgStyle;\n  @Input() resultStyle;\n  @Input() lensStyle;\n  @Input() containerStyle;\n  zoomImage;\n  previewImage;\n\n  @Input('zoomImageSrc') set _imgSrc(val) {\n    this.zoomImage = val;\n    if (this.notFirstTime === true) {\n      this.renderer.setStyle(this.result, 'backgroundImage', \"url('\" + val + \"')\");\n    }\n    this.notFirstTime = true;\n    // this.renderer.setStyle(this.result, 'backgroundImage', val);\n  }\n\n  @Input('previewImageSrc') set _zoomImage(val) {\n    this.previewImage = val;\n  }\n\n  ngOnInit() {\n    \n  }\n\n  ngAfterViewInit() {\n    this.img = this.imgElmRef.nativeElement;\n    this.result = this.resultElmRef.nativeElement;\n    this.container = this.containerElmRef.nativeElement;\n\n    this.renderer.setAttribute(this.img, 'style', <string>this.imgStyle);\n    this.renderer.setAttribute(this.result, 'style', <string>this.resultStyle);\n    this.renderer.setAttribute(this.container, 'style', <string>this.containerStyle);\n    this.imageZoom();\n    this.renderer.setStyle(this.lens, 'visibility', 'hidden');\n  }\n\n\n  imageZoom() {\n    /*create lens:*/\n    this.lens = this.renderer.createElement('DIV');\n    this.renderer.addClass(this.lens, 'img-zoom-lens');\n    this.renderer.setAttribute(this.lens, 'style', <string>this.lensStyle);\n\n    /*insert lens:*/\n    this.renderer.insertBefore(this.img.parentElement, this.lens, this.img);\n\n    /*calculate the ratio between result DIV and lens:*/\n    this.cx = this.result.offsetWidth / this.lens.offsetWidth;\n    this.cy = this.result.offsetHeight / this.lens.offsetHeight;\n\n    /*set background properties for the result DIV:*/\n    this.renderer.setStyle(this.result, 'backgroundImage', \"url('\" + this.zoomImage + \"')\");\n    this.renderer.setStyle(this.result, 'backgroundSize', (this.img.width * this.cx) + 'px ' + (this.img.height * this.cy) + 'px');\n    // this.renderer.setStyle(this.img.parentElement, 'position', 'relative')\n\n    /*execute a function when someone moves the cursor over the image, or the lens:*/\n    this.renderer.listen(this.lens, 'mousemove', this.moveLens.bind(this));\n    this.renderer.listen(this.img, 'mousemove', this.moveLens.bind(this));\n\n    /*and also for touch screens:*/\n    this.renderer.listen(this.img, 'touchmove', this.moveLens.bind(this));\n    this.renderer.listen(this.lens, 'touchmove', this.moveLens.bind(this));\n  }\n\n  moveLens(e) {\n      let pos, x, y;\n      /*prevent any other actions that may occur when moving over the image:*/\n      e.preventDefault();\n      /*get the cursor's x and y positions:*/\n      pos = this.getCursorPos(e);\n      /*calculate the position of the lens:*/\n      x = pos.x - (this.lens.offsetWidth / 2);\n      y = pos.y - (this.lens.offsetHeight / 2);\n\n\n      /*prevent the lens from being positioned outside the image:*/\n      if (x > this.img.width - this.lens.offsetWidth) {\n        x = this.img.width - this.lens.offsetWidth;\n\n        this.hide = true;\n        this.renderer.setStyle(this.lens, 'visibility', 'hidden');\n      } else {\n        this.hide = false;\n        this.renderer.setStyle(this.lens, 'visibility', 'visible');\n      }\n\n      if (x < 0) {\n        x = 0;\n        this.hide = true;\n        this.renderer.setStyle(this.lens, 'visibility', 'hidden');\n      }\n\n      if (y > this.img.height - this.lens.offsetHeight) {\n        y = this.img.height - this.lens.offsetHeight;\n        this.hide = true;\n        this.renderer.setStyle(this.lens, 'visibility', 'hidden');\n      }\n\n      if (y < 0) {\n        y = 0;\n        this.hide = true;\n        this.renderer.setStyle(this.lens, 'visibility', 'hidden');\n      }\n\n      /*set the position of the lens:*/\n      this.renderer.setStyle(this.lens, 'left', x + 'px');\n      this.renderer.setStyle(this.lens, 'top', y + 'px');\n      /*display what the lens 'sees':*/\n      this.renderer.setStyle(this.result, 'backgroundPosition', '-' + (x * this.cx) + 'px -' + (y * this.cy) + 'px');\n    }\n\n  getCursorPos(e) {\n      let a, x = 0, y = 0;\n      e = e || window.event;\n      /*get the x and y positions of the image:*/\n      a = this.img.getBoundingClientRect();\n      /*calculate the cursor's x and y coordinates, relative to the image:*/\n      x = e.pageX - a.left;\n      y = e.pageY - a.top;\n      /*consider any page scrolling:*/\n      x = x - window.pageXOffset;\n      y = y - window.pageYOffset;\n      return {x : x, y : y};\n  }\n\n  handleMouseLeave() {\n    this.hide = true;\n    this.renderer.setStyle(this.lens, 'visibility', 'hidden');\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgxImgZoomComponent } from './ngx-img-zoom.component';\nimport { CommonModule } from '@angular/common';\nimport { NgxImgZoomService } from './ngx-img-zoom.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  providers: [NgxImgZoomService],\n  declarations: [NgxImgZoomComponent],\n  exports: [NgxImgZoomComponent]\n})\nexport class NgxImgZoomModule { }\n"]}